server:
  port: 8763


spring:
  profiles:
    active: prod
  servlet:
    multipart:
      enabled: true
      max-file-size: ${rccp.micro.servlet.multipart.max-file-size}
      max-request-size: ${rccp.micro.servlet.multipart.max-request-size}

eureka:
  instance:
    hostname: 172.28.152.225
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.ip-address}:${server.port}


zuul:
  sensitiveHeaders:
  routes:
    api-centre:
      path: /api-centre/**
      serviceId: rccp-centre

    api-user:
      path: /api-user/**
      serviceId: rccp-user

    api-oauth:
      path: /api-oauth/**
      sensitiveHeaders:
      serviceId: rccp-oauth

    api-id:
      path: /api-id/**
      serviceId: rccp-id

    api-dfs:
      path: /api-dfs/**
      serviceId: rccp-dfs

    api-area:
      path: /api-area/**
      serviceId: rccp-area

    api-sms:
      path: /api-sms/**
      serviceId: rccp-sms

    api-redis:
      path: /api-redis/**
      serviceId: rccp-redis

    api-resource:
      path: /api-resource/**
      serviceId: rccp-resource

    api-amusement:
      path: /api-amusement/**
      serviceId: rccp-amusement


    api-attendances:
      path: /api-attendances/**
      serviceId: rccp-attendances

    api-course:
      path: /api-course/**
      serviceId: rccp-course

    api-management:
      path: /api-management/**
      serviceId: rccp-management

    api-material:
      path: /api-material/**
      serviceId: rccp-material

    api-industry:
      path: /api-industry/**
      serviceId: rccp-industry

    api-mallmanagement:
      path: /api-mallmanagemenet/**
      serviceId: rccp-mall-manage

    api-app:
      path: /api-app/**
      serviceId: rccp-api

    api-resume:
      path: /api-resume/**
      serviceId: rccp-resume

    api-mall:
      path: /api-mall/**
      serviceId: rccp-mall-api

    api-order:
      path: /api-order/**
      serviceId: rccp-order

    api-lease:
      path: /api-lease/**
      serviceId: rccp-lease
    api-dataview:
      path: /api-dataview/**
      serviceId: rccp-dataview
    api-health:
      path: /api-health/**
      serviceId: rccp-health
    api-openapi:
      path: /api-openapi/**
      serviceId: rccp-openapi

  add-proxy-headers: true
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 300000 #熔断响应时间
  #ribbon超时配置 读取和等待时间都设置6秒
ribbon:
  #熔断读取时间
  ReadTimeout: 60000
  #连接等待时间
  ConnectTimeout: 60000

redis:
  database: 0          #Redis数据库索引（默认为0）
  host: ${rccp.micro.redis.host}  # Redis服务器地址
  port: ${rccp.micro.redis.port}  # Redis服务器连接端口
  password: ${rccp.micro.redis.password}       #Redis服务器连接密码（默认为空）
  #    pool:
  #      max-active: 8   # 连接池最大连接数（使用负值表示没有限制）
  #      max-wait: -1    # 连接池最大阻塞等待时间（使用负值表示没有限制）
  #      max-idle: 8     # 连接池中的最大空闲连接
  #      min-idle: 0     # 连接池中的最小空闲连接
  timeout: ${rccp.micro.redis.timeout}       # 连接超时时间（毫秒）


